[
    {
        "category": "NumPy",
        "question": "1. What is a correct syntax to create a NumPy array?",
        "answers": [
            "1. np.array([1, 2, 3, 4,5])",
            "2. np.object([1, 2, 3, 4, 5])",
            "3. np.createArray([1, 2, 3, 4, 5])"
        ],
        "correct_answer": "1. np.array([1, 2, 3, 4,5])",
        "improvement": "Use np.array() to create arrays in NumPy. It is the correct syntax for arrays."
    },
    {
        "category": "NumPy",
        "question": "2. Which of the following arrays is a two dimensional (2-D) array?",
        "answers": [
            "1. 42",
            "2. [1, 2, 3, 4, 5]",
            "3. [[1, 2, 3], [4, 5, 6]]"
        ],
        "correct_answer": "3. [[1, 2, 3], [4, 5, 6]]",
        "improvement": "Remember that 2D arrays have rows and columns, represented as nested lists in Python."
    },
    {
        "category": "NumPy",
        "question": "3. What is a correct syntax to check the number of dimensions in an array?",
        "answers": [
            "1. arr.ndim()",
            "2. arr.dim()",
            "3. arr.dim",
            "4. arr.ndim"
        ],
        "correct_answer": "4. arr.ndim",
        "improvement": "Use the 'ndim' attribute (e.g., arr.ndim) to check the number of dimensions in a NumPy array."
    },
    {
        "category": "NumPy",
        "question": "4. What is a correct syntax to print the first item of an array?",
        "answers": [
            "1. print(myArr[1])",
            "2. print(myArr[0])",
            "3. print(myArr,1)"
        ],
        "correct_answer": "2. print(myArr[0])",
        "improvement": "Array indexing in Python starts at 0. Use arr[0] to access the first element."
    },
    {
        "category": "NumPy",
        "question": "5. What is a correct syntax to print the number 8 from the array: arr = np.array([[1,2,3,4,5], [6,7,8,9,10]])",
        "answers": [
            "1. print(arr[7, 2])",
            "2. print(arr[3, 0])",
            "3. print(arr[1, 2])"
        ],
        "correct_answer": "3. print(arr[1, 2])",
        "improvement": "Remember that 2D arrays use row and column indices for element access, starting from 0."
    },
    {
        "category": "NumPy",
        "question": "6. What is a correct syntax to print the numbers [3, 4, 5] from the array: arr = np.array([1,2,3,4,5,6,7])",
        "answers": [
            "1. print(arr[2:5])",
            "2. print(arr[2:4])",
            "3. print(arr[3:6])",
            "4. print(arr[2:6])"
        ],
        "correct_answer": "1. print(arr[2:5])",
        "improvement": "Slicing syntax arr[start:end] retrieves elements from start to end-1."
    },
    {
        "category": "NumPy",
        "question": "7. Which syntax would print the last 4 numbers from the array: arr = np.array([1,2,3,4,5,6,7])",
        "answers": [
            "1. print(arr[3:])",
            "2. print(arr[:4])",
            "3. print(arr[4])",
            "4. print(arr[4:])"
        ],
        "correct_answer": "1. print(arr[3:])",
        "improvement": "To access the last elements of an array, use slicing with a negative index or open range (e.g., arr[-4:] or arr[3:])."
    },
    {
        "category": "NumPy",
        "question": "8. What is a correct syntax to check the data type of an array?",
        "answers": [
            "1. arr.ntype",
            "2. arr.dtype",
            "3. arr.type",
            "4. arr.datatype"
        ],
        "correct_answer": "2. arr.dtype",
        "improvement": "The 'dtype' attribute (e.g., arr.dtype) reveals the data type of elements in a NumPy array."
    },
    {
        "category": "NumPy",
        "question": "9. What is a correct syntax to create an array of type float?",
        "answers": [
            "1. arr = np.float([1, 2, 3, 4])",
            "2. arr = np.array([1, 2, 3, 4]).toFloat()",
            "3. arr = np.array([1, 2, 3, 4]),dtype='f'"
        ],
        "correct_answer": "3. arr = np.array([1, 2, 3, 4]),dtype='f'",
        "improvement": "To create arrays of a specific type, specify the dtype argument in np.array()."
    },
    {
        "category": "NumPy",
        "question": "10. Only one of the following statements is true when it comes to Views in NumPy, which one?",
        "answers": [
            "1. The view SHOULD NOT be affected by the changes made to the original array",
            "2. The view SHOULD be affected by the changes made to the original array"
        ],
        "correct_answer": "2. The view SHOULD be affected by the changes made to the original array",
        "improvement": "Views in NumPy reflect changes in the original array because they share the same data buffer."
    },
    {
        "category": "NumPy",
        "question": "11. Only one of the following statements is true when it comes to Copies in NumPy, which one?",
        "answers": [
            "1. The copy SHOULD NOT be affected by the changes made to the original array",
            "2. The copy SHOULD be affected by the changes made to the original array"
        ],
        "correct_answer": "1. The copy SHOULD NOT be affected by the changes made to the original array",
        "improvement": "Copies in NumPy are independent of the original array. Changes in one do not affect the other."
    },
    {
        "category": "NumPy",
        "question": "12. In NumPy, what does the SHAPE of an array mean?",
        "answers": [
            "1. The shape is the number of columns.",
            "2. The shape is the number of rows.",
            "3. The shape is the number of elements in each dimension."
        ],
        "correct_answer": "3. The shape is the number of elements in each dimension.",
        "improvement": "The shape of an array refers to its dimensions (e.g., rows and columns)."
    },
    {
        "category": "NumPy",
        "question": "13. What is a correct syntax to return the shape of an array?",
        "answers": [
            "1. shape(arr)",
            "2. arr.shape",
            "3. arr.shape()"
        ],
        "correct_answer": "2. arr.shape",
        "improvement": "The 'shape' attribute (e.g., arr.shape) returns the dimensions of an array."
    },
    {
        "category": "NumPy",
        "question": "14. What is a correct method to join two or more arrays?",
        "answers": [
            "1. join()",
            "2. concatenate()",
            "3. array_join()"
        ],
        "correct_answer": "2. concatenate()",
        "improvement": "Use np.concatenate() to join arrays along an existing axis."
    },
    {
        "category": "NumPy",
        "question": "15. What is a correct method to split arrays?",
        "answers": [
            "1. hstack()",
            "2. vstack()",
            "3. array_split()",
            "4. All the other 3 answers are correct"
        ],
        "correct_answer": "3. array_split()",
        "improvement": "Use np.array_split() to split arrays into multiple sub-arrays."
    },
    {
        "category": "NumPy",
        "question": "16. What is a correct method to search for a certain value in an array?",
        "answers": [
            "1. find()",
            "2. search()",
            "3. where()"
        ],
        "correct_answer": "3. where()",
        "improvement": "The np.where() function helps locate elements that match specific conditions."
    },
    {
        "category": "NumPy",
        "question": "17. What is a correct syntax to return the index of all items that has the value 4 from the array: arr = np.array([1,4,3,4,5,4,4])?",
        "answers": [
            "1. arr.search(4)",
            "2. np.where(arr == 4)",
            "3. arr.where()"
        ],
        "correct_answer": "2. np.where(arr == 4)",
        "improvement": "The np.where(arr == value) returns the indices of elements equal to the specified value."
    },
    {
        "category": "NumPy",
        "question": "18. What is a correct method to sort the elements of an array?",
        "answers": [
            "1. orderby()",
            "2. sort()",
            "3. order()"
        ],
        "correct_answer": "2. sort()",
        "improvement": "The sort() method organizes array elements in ascending order by default."
    },
    {
        "category": "NumPy",
        "question": "19. When using the NumPy random module, how can you return a random number from 0 to 100?",
        "answers": [
            "1. random.rand()",
            "2. random.randint(100)",
            "3. random.rand(100)"
        ],
        "correct_answer": "2. random.randint(100)",
        "improvement": "Use np.random.randint() to generate random integers within a specified range."
    },
    {
        "category": "NumPy",
        "question": "20. When using the NumPy random module, how can you return a Normal Data Distrbution with 1000 numbers, concentrated around the number 50, with a standard deviation of 0.2?",
        "answers": [
            "1. random.normal(size=1000, mean=50, deviation=0.2)",
            "2. random.normal(size=1000, loc=50, scale=0.2)",
            "3. random.normal(size=1000, loc=50, s=0.1)"
        ],
        "correct_answer": "2. random.normal(size=1000, loc=50, scale=0.2)",
        "improvement": "To create normal distributions, specify loc (mean) and scale (std deviation) in random.normal()."
    },
    {
        "category": "NumPy",
        "question": "21. What is a correct syntax to mathematically add the numbers of arr1 to the numbers of arr2?",
        "answers": [
            "1. np.add(arr1, arr2)",
            "2. sum(arr1, arr2)",
            "3. np.append(arr1, arr2)"
        ],
        "correct_answer": "1. np.add(arr1, arr2)",
        "improvement": "Use np.add(arr1, arr2) for element-wise addition of arrays."
    },
    {
        "category": "NumPy",
        "question": "22. What is a correct syntax to subtract the numbers from arr1 with the numbers from arr2?",
        "answers": [
            "1. np.minus(arr1, arr2)",
            "2. np.min(arr1, arr2)",
            "3. np.sub(arr1, arr2)",
            "4. np.subtract(arr1, arr2)"
        ],
        "correct_answer": "4. np.subtract(arr1, arr2)",
        "improvement": "Use np.subtract(arr1, arr2) for element-wise subtraction of arrays."
    },
    {
        "category": "NumPy",
        "question": "23. What is a correct method to round decimals in NumPy?",
        "answers": [
            "1. All the other 3 are rounding methods in NumPy",
            "2. np.trunc()",
            "3. np.around()",
            "4. np.fix()"
        ],
        "correct_answer": "1. All the other 3 are rounding methods in NumPy",
        "improvement": "NumPy offers multiple rounding methods: np.trunc(), np.around(), and np.fix()."
    },
    {
        "category": "NumPy",
        "question": "24. What would be the answer of this cumulative summation in NumPy? arr = np.array([1,2,3]) print(np.cumsum(arr))",
        "answers": [
            "1. [6]",
            "2. [1 3 6]",
            "3. [9][3 6 9]"
        ],
        "correct_answer": "2. [1 3 6]",
        "improvement": "The cumulative summation of an array adds up the elements progressively."
    },
    {
        "category": "NumPy",
        "question": "25. Which syntax would print every other item from the array: arr = np.array([1,2,3,4,5,6,7])",
        "answers": [
            "1. print(arr[::2])",
            "2. print(arr(0: step = 2))",
            "3. print(arr[1:3:5:7])"
        ],
        "correct_answer": "1. print(arr[::2])",
        "improvement": "Slicing with arr[::2] retrieves every other element in the array."
    }
]